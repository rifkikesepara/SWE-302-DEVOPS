name: Java CI with Gradle

on:
  push:
    branches: ["uat"]
  pull_request:
    branches: ["uat"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{secrets.DB_HOST}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "23"

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --refresh-dependencies

      - name: Archive JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-jar
          path: build/libs/*.jar

      - name: Decode and Save PEM Key
        run: |
          echo "${{ secrets.SFTP_PRIVATE_KEY }}" | base64 --decode > key.pem
          chmod 600 key.pem

      - name: Upload JAR via SFTP
        run: |
          sftp -i key.pem -o IdentitiesOnly=yes -o StrictHostKeyChecking=no ubuntu@ec2-51-20-248-11.eu-north-1.compute.amazonaws.com <<EOF
          put build/libs/*.jar /home/ubuntu/
          bye
          EOF

  image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: built-jar
          path: build/libs/

      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build the Docker image
        run: docker build -t rifkikesepara/ozmenapp .

      - name: Push to Dockerhub
        run: docker push rifkikesepara/ozmenapp:latest

  run-container:
    runs-on: self-hosted
    needs: image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Docker Compose
        run: sudo docker-compose down && sudo docker-compose pull  && sudo docker-compose up -d

      - name: Verify Running Containers
        run: sudo docker-compose ps
